<?xml version="1.0" encoding="Windows-1252"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGUID>{2F5BCBF7-EED8-40CE-B1BF-BBBF891C0A32}</ProjectGUID>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>opentld</ProjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseOfMfc>false</UseOfMfc>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v120</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
    <PropertyGroup>
      <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github\OpenTLD_20150408\bin\Debug\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">opentld.dir\Debug\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">opentld</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github\OpenTLD_20150408\bin\Release\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">opentld.dir\Release\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">opentld</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github\OpenTLD_20150408\bin\MinSizeRel\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">opentld.dir\MinSizeRel\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">opentld</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
      <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github\OpenTLD_20150408\bin\RelWithDebInfo\</OutDir>
      <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">opentld.dir\RelWithDebInfo\</IntDir>
      <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">opentld</TargetName>
      <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.exe</TargetExt>
      <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
      <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
    </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Debug/</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR="Debug";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;_DEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR=\"Debug\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;..\..\lib\Debug\main.lib;..\..\lib\Debug\opentld.lib;..\..\lib\Debug\cvblobs.lib;..\..\lib\Debug\config++.lib;D:\opencv\build\x64\vc12\lib\opencv_videostab2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ts2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_superres2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_stitching2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_contrib2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410d.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/opencv/build/x64/vc12/lib;D:/opencv/build/x64/vc12/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ImportLibrary>D:/github/OpenTLD_20150408/bin/Debug/opentld.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/github/OpenTLD_20150408/bin/Debug/opentld.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>Release/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat></DebugInformationFormat>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR="Release";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR=\"Release\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;..\..\lib\Release\main.lib;..\..\lib\Release\opentld.lib;..\..\lib\Release\cvblobs.lib;..\..\lib\Release\config++.lib;D:\opencv\build\x64\vc12\lib\opencv_videostab2410.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410.lib;D:\opencv\build\x64\vc12\lib\opencv_ts2410.lib;D:\opencv\build\x64\vc12\lib\opencv_superres2410.lib;D:\opencv\build\x64\vc12\lib\opencv_stitching2410.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410.lib;D:\opencv\build\x64\vc12\lib\opencv_contrib2410.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/opencv/build/x64/vc12/lib;D:/opencv/build/x64/vc12/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>D:/github/OpenTLD_20150408/bin/Release/opentld.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/github/OpenTLD_20150408/bin/Release/opentld.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>MinSizeRel/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <DebugInformationFormat></DebugInformationFormat>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR="MinSizeRel";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR=\"MinSizeRel\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;..\..\lib\MinSizeRel\main.lib;..\..\lib\MinSizeRel\opentld.lib;..\..\lib\MinSizeRel\cvblobs.lib;..\..\lib\MinSizeRel\config++.lib;D:\opencv\build\x64\vc12\lib\opencv_videostab2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ts2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_superres2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_stitching2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_contrib2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410d.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/opencv/build/x64/vc12/lib;D:/opencv/build/x64/vc12/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <ImportLibrary>D:/github/OpenTLD_20150408/bin/MinSizeRel/opentld.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/github/OpenTLD_20150408/bin/MinSizeRel/opentld.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AssemblerListingLocation>RelWithDebInfo/</AssemblerListingLocation>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR="RelWithDebInfo";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>WIN32;_WINDOWS;NDEBUG;LIBCONFIGXX_STATIC;LIBCONFIG_STATIC;CMAKE_INTDIR=\"RelWithDebInfo\";%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\opencv\build\include;D:\opencv\build\include\opencv;D:\github\OpenTLD_20150408\src\opentld\main;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\imacq;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\mftracker;D:\github\OpenTLD_20150408\src\opentld\..\libopentld\tld;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\cvblobs;D:\github\OpenTLD_20150408\src\opentld\..\3rdparty\libconfig;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalOptions> /machine:x64 /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib;..\..\lib\RelWithDebInfo\main.lib;..\..\lib\RelWithDebInfo\opentld.lib;..\..\lib\RelWithDebInfo\cvblobs.lib;..\..\lib\RelWithDebInfo\config++.lib;D:\opencv\build\x64\vc12\lib\opencv_videostab2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ts2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_superres2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_stitching2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_contrib2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_nonfree2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ocl2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_gpu2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_photo2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_objdetect2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_legacy2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_video2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_ml2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_calib3d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_features2d2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_highgui2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_imgproc2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_flann2410d.lib;D:\opencv\build\x64\vc12\lib\opencv_core2410d.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/opencv/build/x64/vc12/lib;D:/opencv/build/x64/vc12/lib/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <ImportLibrary>D:/github/OpenTLD_20150408/bin/RelWithDebInfo/opentld.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/github/OpenTLD_20150408/bin/RelWithDebInfo/opentld.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
      <Version></Version>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/github/OpenTLD_20150408 -BD:/github/OpenTLD_20150408 --check-stamp-file D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/github/OpenTLD_20150408 -BD:/github/OpenTLD_20150408 --check-stamp-file D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/github/OpenTLD_20150408 -BD:/github/OpenTLD_20150408 --check-stamp-file D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\Program Files (x86)\CMake\bin\cmake.exe" -HD:/github/OpenTLD_20150408 -BD:/github/OpenTLD_20150408 --check-stamp-file D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:/github/OpenTLD_20150408/src/opentld/CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;D:\github\OpenTLD_20150408\src\opentld\CMakeLists.txt;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\github\OpenTLD_20150408\src\opentld\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="OpenTLD.cpp"  />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:/github/OpenTLD_20150408/ZERO_CHECK.vcxproj">
      <Project>FFD6C6C9-A1E6-4B8E-B04A-2E09637E85F7</Project>
    </ProjectReference>
    <ProjectReference Include="D:/github/OpenTLD_20150408/src/3rdparty/libconfig/config++.vcxproj">
      <Project>3E62DC32-DF85-42B1-BE94-0E3D8284C3D5</Project>
    </ProjectReference>
    <ProjectReference Include="D:/github/OpenTLD_20150408/src/3rdparty/cvblobs/cvblobs.vcxproj">
      <Project>1C34B6DD-5B1F-4AF5-9A16-43E48CD2CD68</Project>
    </ProjectReference>
    <ProjectReference Include="D:/github/OpenTLD_20150408/src/libopentld/libopentld.vcxproj">
      <Project>A3C54004-736D-4056-8F92-1BD106BC96E5</Project>
    </ProjectReference>
    <ProjectReference Include="D:/github/OpenTLD_20150408/src/opentld/main.vcxproj">
      <Project>89BA5EDF-FEDB-4BDB-BB46-1A0D10746294</Project>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>